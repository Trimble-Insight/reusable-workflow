on:
  workflow_call:
    
    inputs:
      environment:
        required: true
        type: string
      cluster-name:
        required: false
        type: string

    secrets:
      aws-account-id: 
        required: false
      region:
        required: true
      personal-access-token:
        required: true
      github-token:
         required: true
      version-major:
        required: true
      version-minor:
        required: true
      version-hotfix:
        required: true
      version-build:
        required: true

jobs:
  # update_version:
  #   uses: ./.github/workflows/UpdateBuildVersionTest.yml
  #   with:
  #     environment: staging

  deploy:
    name: Display inputs
    runs-on: ubuntu-latest
    #needs: update_version
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check for Preview
        if: ${{ inputs.environment == 'preview' }}
        run: echo ::set-output name=FORMATTED_ENVIRONMENT::Preview 
        id: check-environment
      
      - name: Check for Staging
        if: ${{ inputs.environment == 'staging'}}
        run: echo ::set-output name=FORMATTED_ENVIRONMENT::Staging 
        id: check-environment
      
      - name: Check for Production
        if: ${{ inputs.environment == 'production'}}
        run: echo ::set-output name=FORMATTED_ENVIRONMENT::Production 
        id: check-environment
      
      - name: Show Formmated Environment
        run: echo "Formatted Environment is ${{ steps.check-environment.outputs.FORMATTED_ENVIRONMENT }}"

      - name: Update major
        run: |
          sed -i "s/<major>/${{ secrets.version-major }}/g" output.txt
      
      - name: Update minor
        run: |
          sed -i "s/<minor>/${{ secrets.version-minor }}/g" output.txt
      
      - name: Update hotfix
        run: |
          sed -i "s/<hotfix>/${{ secrets.version-hotfix }}/g" output.txt
      
      - name: Save to output.text
        uses: pCYSl5EDgo/cat@master
        id: save-output
        with:
          path: output.txt

      - name: Show output.txt
        run: echo $TEXT
        env:
          TEXT: ${{ steps.save-output.outputs.text }}
      
