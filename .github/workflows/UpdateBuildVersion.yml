name: Set Build Version

on:
  workflow_call:
    inputs:
      service-name:
        required: false
        type: string
      environment: 
        required: true
        type: string
      repository:
        required: true
        type: string
      environment-file:
        required: false
        type: string
    secrets:
      personal-access-token:
        required: true
      github-token:
        required: true
      version-major:
        required: true
      version-minor:
        required: true
      version-hotfix:
        required: true
      version-build:
        required: true
      last-preview-build:
        required: false
    # outputs:
    #   version-preview:
    #     description: "Version number for preview"
    #     value: ${{ jobs.update_version_preview.outputs. }} #complete

jobs:
  update_version_preview:
    if: ${{ inputs.environment == 'preview' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    # outputs:
    #   preview-version: ${{ steps.output-preview-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Build Version
        id: increment-build
        env:
          VERSION_BUILD: ${{secrets.version-build}}
        run: |
          echo ::set-output name=updated-build-version::$((VERSION_BUILD + 1))
      
      - name : Increment build version - VERSION_BUILD
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: 'VERSION_BUILD'
          value: ${{ steps.increment-build.outputs.updated-build-version }}
          repository: 'Trimble-Insight'
          token: ${{ secrets.personal-access-token }}
          org: true
          visibility: 'private'
      
      - name : Increment build version - LAST_PREVIEW_BUILD
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: 'LAST_PREVIEW_BUILD'
          value: ${{ steps.increment-build.outputs.updated-build-version }}
          repository: ${{ inputs.repository }}
          token: ${{ secrets.personal-access-token }}
          visibility: 'private'

      # set version from step above to a environment variable
      # set the output from this environment variable

      # - name: Output Preview Version
      #   id: output-preview-version
      #   run: echo "version=v${{secrets.version-major}}.${{secrets.version-minor}}.${{secrets.version-hotfix}}.${{steps.increment-build.outputs.updated-build-version}}" >> $GITHUB_OUTPUT

      # Move to Deploy.yml
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "Microservice/appsettings.Preview.json"

      - name: Update app settings
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          sed -i "s/<version>/$VERSION/g" Microservice/appsettings.Preview.json
        env:
          VERSION: "v${{secrets.version-major}}.${{secrets.version-minor}}.${{secrets.version-hotfix}}.${{steps.increment-build.outputs.updated-build-version}}"
      
      - name: Update environment settings - Home
        if: ${{ inputs.service-name == 'Home' }}
        run: sed -i "s/<version>/$VERSION/g" Microservice/src/environments/environment.preview.ts
        env:
          VERSION: "v${{secrets.version-major}}.${{secrets.version-minor}}.${{secrets.version-hotfix}}.${{steps.increment-build.outputs.updated-build-version}}"
      # End - Move to Deploy.yml

      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.github-token }}"
          tag: "v${{secrets.version-major}}.${{secrets.version-minor}}.${{secrets.version-hotfix}}.${{steps.increment-build.outputs.updated-build-version}}"

  update_version_staging:
    if: ${{ inputs.environment == 'staging' }}
    runs-on: ubuntu-latest
    env:
      VERSION: v${{secrets.version-major}}.${{secrets.version-minor}}.${{secrets.version-hotfix}}.${{secrets.last-preview-build}}-stg

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "Microservice/appsettings.Staging.json"

      - name: Update app settings
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          sed -i "s/<version>/${{ env.VERSION }}/g" Microservice/appsettings.Staging.json
      
      - name: Update environment settings - Home
        if: ${{ inputs.service-name == 'Home' }}
        run: sed -i "s/<version>/${{ env.VERSION }}/g" Microservice/src/environments/environment.staging.ts

      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.github-token }}"
          tag: ${{ env.VERSION }}
  
  update_version_production:
    if: ${{ inputs.environment == 'production' }}
    runs-on: ubuntu-latest
    env:
      VERSION: v${{secrets.version-major}}.${{secrets.version-minor}}.${{secrets.version-hotfix}}.${{secrets.version-build}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "Microservice/appsettings.Production.json"

      - name: Update app settings
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          sed -i "s/<version>/${{ env.VERSION }}/g" Microservice/appsettings.Production.json

      - name: Update environment settings - Home
        if: ${{ inputs.service-name == 'Home' }} 
        run: sed -i "s/<version>/${{ env.VERSION }}/g" Microservice/src/environments/environment.prod.ts
      
      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.github-token }}"
          tag: "${{ env.VERSION }}"
